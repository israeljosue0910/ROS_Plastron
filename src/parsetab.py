
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDDIAGNOSTICS ADDTWOINTS AND AS CHAR CHAR_LITERAL CLIENT_REQUESTS COMMA COMMANDINT CREATE_CUSTOM_MESSAGE CREATE_MESSAGE CREATE_NODE DEFAULT EMPTY FLOAT32 FROM GENERATE_LAUNCH GENERATE_NODE GETMAP IMU INPUT INT INT32 LOAD MESSAGE_TYPE NAME NODE NODE_VAR NONE OF PATH POINT POSE PROVIDES_SERVICE PUBLISH QUATERNION SELFTEST SERVICE_TYPE SETBOOL SETCAMERAINFO STOP_PUBLISHING STOP_REQUEST STOP_SERVICE STRING STRING_LITERAL SUBSCRIBE TEMPERATURE TO TOPIC_SERVICE TRIGGER TWIST UNSUBSCRIBE VECTOR3 WAYPOINTCLEAR WAYPOINTPULL WITH\n    exp : node_mod\n        | unsub\n        | stop_pub\n        | pub\n        | sub\n        | stop_serv\n        | serv\n        | stop_clnt\n        | clnt\n        | message\n    \n   sub : SUBSCRIBE NAME TO TOPIC_SERVICE OF MESSAGE_TYPE sub_type\n   \n   unsub : UNSUBSCRIBE NAME FROM TOPIC_SERVICE\n   \n   pub : NAME PUBLISH NAME TO TOPIC_SERVICE OF MESSAGE_TYPE sub_type\n   \n   stop_pub : NAME STOP_PUBLISHING TO TOPIC_SERVICE\n   \n   serv : NAME PROVIDES_SERVICE TOPIC_SERVICE OF SERVICE_TYPE serv_type\n   \n   stop_serv : NAME STOP_SERVICE TOPIC_SERVICE\n   \n   clnt : NAME CLIENT_REQUESTS TOPIC_SERVICE OF SERVICE_TYPE serv_type WITH INPUT params\n   \n   stop_clnt : NAME STOP_REQUEST TOPIC_SERVICE\n   \n   params : NONE\n        | DEFAULT\n        | list\n   \n    list : term\n        | list COMMA term\n    \n    term : INT\n        | STRING_LITERAL\n    \n   node_mod : CREATE_NODE TOPIC_SERVICE AS NAME\n        | LOAD PATH\n        | GENERATE_NODE NAME\n   \n   message : CREATE_MESSAGE NAME OF MESSAGE_TYPE sub_type AND INPUT list\n   \n   serv_type : ADDTWOINTS\n        | EMPTY\n        | SETBOOL\n        | TRIGGER\n        | WAYPOINTCLEAR\n        | WAYPOINTPULL\n        | COMMANDINT\n        | SETCAMERAINFO\n        | GETMAP\n        | ADDDIAGNOSTICS\n        | SELFTEST\n   \n   sub_type : STRING\n        | POSE\n        | POINT\n        | TWIST\n        | VECTOR3\n        | CHAR\n        | INT32\n        | FLOAT32\n   '
    
_lr_action_items = {'CREATE_NODE':([0,],[12,]),'LOAD':([0,],[14,]),'GENERATE_NODE':([0,],[15,]),'UNSUBSCRIBE':([0,],[16,]),'NAME':([0,15,16,17,18,21,31,],[13,27,28,29,30,33,41,]),'SUBSCRIBE':([0,],[17,]),'CREATE_MESSAGE':([0,],[18,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,26,27,34,36,41,42,46,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,80,82,84,85,86,87,88,89,90,91,93,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-27,-28,-16,-18,-26,-14,-12,-41,-42,-43,-44,-45,-46,-47,-48,-15,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-11,-13,-29,-22,-24,-25,-17,-19,-20,-21,-23,]),'TOPIC_SERVICE':([12,22,23,24,25,32,38,39,43,],[19,34,35,36,37,42,46,47,49,]),'STOP_PUBLISHING':([13,],[20,]),'PUBLISH':([13,],[21,]),'STOP_SERVICE':([13,],[22,]),'PROVIDES_SERVICE':([13,],[23,]),'STOP_REQUEST':([13,],[24,]),'CLIENT_REQUESTS':([13,],[25,]),'PATH':([14,],[26,]),'AS':([19,],[31,]),'TO':([20,29,33,],[32,39,43,]),'FROM':([28,],[38,]),'OF':([30,35,37,47,49,],[40,44,45,52,62,]),'MESSAGE_TYPE':([40,52,62,],[48,76,78,]),'SERVICE_TYPE':([44,45,],[50,51,]),'STRING':([48,76,78,],[54,54,54,]),'POSE':([48,76,78,],[55,55,55,]),'POINT':([48,76,78,],[56,56,56,]),'TWIST':([48,76,78,],[57,57,57,]),'VECTOR3':([48,76,78,],[58,58,58,]),'CHAR':([48,76,78,],[59,59,59,]),'INT32':([48,76,78,],[60,60,60,]),'FLOAT32':([48,76,78,],[61,61,61,]),'ADDTWOINTS':([50,51,],[64,64,]),'EMPTY':([50,51,],[65,65,]),'SETBOOL':([50,51,],[66,66,]),'TRIGGER':([50,51,],[67,67,]),'WAYPOINTCLEAR':([50,51,],[68,68,]),'WAYPOINTPULL':([50,51,],[69,69,]),'COMMANDINT':([50,51,],[70,70,]),'SETCAMERAINFO':([50,51,],[71,71,]),'GETMAP':([50,51,],[72,72,]),'ADDDIAGNOSTICS':([50,51,],[73,73,]),'SELFTEST':([50,51,],[74,74,]),'AND':([53,54,55,56,57,58,59,60,61,],[77,-41,-42,-43,-44,-45,-46,-47,-48,]),'WITH':([64,65,66,67,68,69,70,71,72,73,74,75,],[-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,79,]),'INPUT':([77,79,],[81,83,]),'INT':([81,83,92,],[86,86,86,]),'STRING_LITERAL':([81,83,92,],[87,87,87,]),'NONE':([83,],[89,]),'DEFAULT':([83,],[90,]),'COMMA':([84,85,86,87,91,93,],[92,-22,-24,-25,92,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'exp':([0,],[1,]),'node_mod':([0,],[2,]),'unsub':([0,],[3,]),'stop_pub':([0,],[4,]),'pub':([0,],[5,]),'sub':([0,],[6,]),'stop_serv':([0,],[7,]),'serv':([0,],[8,]),'stop_clnt':([0,],[9,]),'clnt':([0,],[10,]),'message':([0,],[11,]),'sub_type':([48,76,78,],[53,80,82,]),'serv_type':([50,51,],[63,75,]),'list':([81,83,],[84,91,]),'term':([81,83,92,],[85,85,93,]),'params':([83,],[88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> exp","S'",1,None,None,None),
  ('exp -> node_mod','exp',1,'p_exp','plastron_parser.py',25),
  ('exp -> unsub','exp',1,'p_exp','plastron_parser.py',26),
  ('exp -> stop_pub','exp',1,'p_exp','plastron_parser.py',27),
  ('exp -> pub','exp',1,'p_exp','plastron_parser.py',28),
  ('exp -> sub','exp',1,'p_exp','plastron_parser.py',29),
  ('exp -> stop_serv','exp',1,'p_exp','plastron_parser.py',30),
  ('exp -> serv','exp',1,'p_exp','plastron_parser.py',31),
  ('exp -> stop_clnt','exp',1,'p_exp','plastron_parser.py',32),
  ('exp -> clnt','exp',1,'p_exp','plastron_parser.py',33),
  ('exp -> message','exp',1,'p_exp','plastron_parser.py',34),
  ('sub -> SUBSCRIBE NAME TO TOPIC_SERVICE OF MESSAGE_TYPE sub_type','sub',7,'p_sub','plastron_parser.py',49),
  ('unsub -> UNSUBSCRIBE NAME FROM TOPIC_SERVICE','unsub',4,'p_unsub','plastron_parser.py',67),
  ('pub -> NAME PUBLISH NAME TO TOPIC_SERVICE OF MESSAGE_TYPE sub_type','pub',8,'p_pub','plastron_parser.py',85),
  ('stop_pub -> NAME STOP_PUBLISHING TO TOPIC_SERVICE','stop_pub',4,'p_stop_pub','plastron_parser.py',108),
  ('serv -> NAME PROVIDES_SERVICE TOPIC_SERVICE OF SERVICE_TYPE serv_type','serv',6,'p_serv','plastron_parser.py',128),
  ('stop_serv -> NAME STOP_SERVICE TOPIC_SERVICE','stop_serv',3,'p_stop_serv','plastron_parser.py',146),
  ('clnt -> NAME CLIENT_REQUESTS TOPIC_SERVICE OF SERVICE_TYPE serv_type WITH INPUT params','clnt',9,'p_clnt','plastron_parser.py',164),
  ('stop_clnt -> NAME STOP_REQUEST TOPIC_SERVICE','stop_clnt',3,'p_stop_clnt','plastron_parser.py',184),
  ('params -> NONE','params',1,'p_params','plastron_parser.py',204),
  ('params -> DEFAULT','params',1,'p_params','plastron_parser.py',205),
  ('params -> list','params',1,'p_params','plastron_parser.py',206),
  ('list -> term','list',1,'p_list','plastron_parser.py',213),
  ('list -> list COMMA term','list',3,'p_list','plastron_parser.py',214),
  ('term -> INT','term',1,'p_term','plastron_parser.py',224),
  ('term -> STRING_LITERAL','term',1,'p_term','plastron_parser.py',225),
  ('node_mod -> CREATE_NODE TOPIC_SERVICE AS NAME','node_mod',4,'p_node_mod','plastron_parser.py',232),
  ('node_mod -> LOAD PATH','node_mod',2,'p_node_mod','plastron_parser.py',233),
  ('node_mod -> GENERATE_NODE NAME','node_mod',2,'p_node_mod','plastron_parser.py',234),
  ('message -> CREATE_MESSAGE NAME OF MESSAGE_TYPE sub_type AND INPUT list','message',8,'p_message','plastron_parser.py',263),
  ('serv_type -> ADDTWOINTS','serv_type',1,'p_serv_type','plastron_parser.py',278),
  ('serv_type -> EMPTY','serv_type',1,'p_serv_type','plastron_parser.py',279),
  ('serv_type -> SETBOOL','serv_type',1,'p_serv_type','plastron_parser.py',280),
  ('serv_type -> TRIGGER','serv_type',1,'p_serv_type','plastron_parser.py',281),
  ('serv_type -> WAYPOINTCLEAR','serv_type',1,'p_serv_type','plastron_parser.py',282),
  ('serv_type -> WAYPOINTPULL','serv_type',1,'p_serv_type','plastron_parser.py',283),
  ('serv_type -> COMMANDINT','serv_type',1,'p_serv_type','plastron_parser.py',284),
  ('serv_type -> SETCAMERAINFO','serv_type',1,'p_serv_type','plastron_parser.py',285),
  ('serv_type -> GETMAP','serv_type',1,'p_serv_type','plastron_parser.py',286),
  ('serv_type -> ADDDIAGNOSTICS','serv_type',1,'p_serv_type','plastron_parser.py',287),
  ('serv_type -> SELFTEST','serv_type',1,'p_serv_type','plastron_parser.py',288),
  ('sub_type -> STRING','sub_type',1,'p_sub_type','plastron_parser.py',295),
  ('sub_type -> POSE','sub_type',1,'p_sub_type','plastron_parser.py',296),
  ('sub_type -> POINT','sub_type',1,'p_sub_type','plastron_parser.py',297),
  ('sub_type -> TWIST','sub_type',1,'p_sub_type','plastron_parser.py',298),
  ('sub_type -> VECTOR3','sub_type',1,'p_sub_type','plastron_parser.py',299),
  ('sub_type -> CHAR','sub_type',1,'p_sub_type','plastron_parser.py',300),
  ('sub_type -> INT32','sub_type',1,'p_sub_type','plastron_parser.py',301),
  ('sub_type -> FLOAT32','sub_type',1,'p_sub_type','plastron_parser.py',302),
]
